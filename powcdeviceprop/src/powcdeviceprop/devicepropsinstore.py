from powc.core import ComResult, cr
from powcpropsys.propstore import PropertyStore

from .devicepropkey import DevicePropertyKeys


class DevicePropertiesReadOnlyInPropertyStore:
    __store: PropertyStore

    __slots__ = ("__store",)

    def __init__(self, store: PropertyStore) -> None:
        self.__store = store

    @property
    def propstore(self) -> PropertyStore:
        return self.__store

    @property
    def device_desc_nothrow(self) -> ComResult[str]:
        ret = self.__store.get_value_nothrow(DevicePropertyKeys.DEVICE_DESC)
        return cr(ret.hr, ret.value_unchecked.to_str()) if ret else cr(ret.hr, "")

    @property
    def device_desc(self) -> str:
        return self.device_desc_nothrow.value

    # HARDWARE_IDS = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 3
    # )  # // DEVPROP_TYPE_STRING_LIST
    # COMPATIBLE_IDS = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 4
    # )  # // DEVPROP_TYPE_STRING_LIST
    # SERVICE = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 6
    # )  # // DEVPROP_TYPE_STRING
    # CLASS = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 9
    # )  # // DEVPROP_TYPE_STRING
    # CLASS_GUID = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 10
    # )  # // DEVPROP_TYPE_GUID
    # DRIVER = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 11
    # )  # // DEVPROP_TYPE_STRING
    # CONFIG_FLAGS = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 12
    # )  # // DEVPROP_TYPE_UINT32

    @property
    def manufacturer_nothrow(self) -> ComResult[str]:
        ret = self.__store.get_value_nothrow(DevicePropertyKeys.MANUFACTURER)
        return cr(ret.hr, ret.value_unchecked.to_str()) if ret else cr(ret.hr, "")

    @property
    def manufacturer(self) -> str:
        return self.manufacturer_nothrow.value

    @property
    def friendlyname_nothrow(self) -> ComResult[str]:
        ret = self.__store.get_value_nothrow(DevicePropertyKeys.FRIENDLY_NAME)
        return cr(ret.hr, ret.value_unchecked.to_str()) if ret else cr(ret.hr, "")

    @property
    def friendlyname(self) -> str:
        return self.friendlyname_nothrow.value

    # LOCATION_INFO = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 15
    # )  # // DEVPROP_TYPE_STRING
    # PDO_NAME = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 16
    # )  # // DEVPROP_TYPE_STRING
    # CAPABILITIES = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 17
    # )  # // DEVPROP_TYPE_UINT32
    # UI_NUMBER = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 18
    # )  # // DEVPROP_TYPE_UINT32
    # UPPER_FILTERS = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 19
    # )  # // DEVPROP_TYPE_STRING_LIST
    # LOWER_FILTERS = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 20
    # )  # // DEVPROP_TYPE_STRING_LIST
    # BUS_TYPE_GUID = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 21
    # )  # // DEVPROP_TYPE_GUID
    # LEGACY_BUS_TYPE = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 22
    # )  # // DEVPROP_TYPE_UINT32
    # BUS_NUMBER = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 23
    # )  # // DEVPROP_TYPE_UINT32
    # ENUMERATOR_NAME = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 24
    # )  # // DEVPROP_TYPE_STRING
    # SECURITY = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 25
    # )  # // DEVPROP_TYPE_SECURITY_DESCRIPTOR
    # SECURITY_SDS = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 26
    # )  # // DEVPROP_TYPE_SECURITY_DESCRIPTOR_STRING
    # DEV_TYPE = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 27
    # )  # // DEVPROP_TYPE_UINT32
    # EXCLUSIVE = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 28
    # )  # // DEVPROP_TYPE_BOOLEAN
    # CHARACTERISTICS = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 29
    # )  # // DEVPROP_TYPE_UINT32
    # ADDRESS = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 30
    # )  # // DEVPROP_TYPE_UINT32
    # UI_NUMBER_DESC_FORMAT = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 31
    # )  # // DEVPROP_TYPE_STRING
    # POWER_DATA = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 32
    # )  # // DEVPROP_TYPE_BINARY
    # REMOVAL_POLICY = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 33
    # )  # // DEVPROP_TYPE_UINT32
    # REMOVAL_POLICY_DEFAULT = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 34
    # )  # // DEVPROP_TYPE_UINT32
    # REMOVAL_POLICY_OVERRIDE = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 35
    # )  # // DEVPROP_TYPE_UINT32
    # INSTALL_STATE = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 36
    # )  # // DEVPROP_TYPE_UINT32
    # LOCATION_PATHS = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 37
    # )  # // DEVPROP_TYPE_STRING_LIST
    # BASE_CONTAINER_ID = PropertyKey.from_define(
    #     0xA45C254E, 0xDF1C, 0x4EFD, 0x80, 0x20, 0x67, 0xD1, 0x46, 0xA8, 0x50, 0xE0, 38
    # )  # // DEVPROP_TYPE_GUID
    # INSTANCE_ID = PropertyKey.from_define(
    #     0x78C34FC8, 0x104A, 0x4ACA, 0x9E, 0xA4, 0x52, 0x4D, 0x52, 0x99, 0x6E, 0x57, 256
    # )  # // DEVPROP_TYPE_STRING
    # DEV_NODE_STATUS = PropertyKey.from_define(
    #     0x4340A6C5, 0x93FA, 0x4706, 0x97, 0x2C, 0x7B, 0x64, 0x80, 0x08, 0xA5, 0xA7, 2
    # )  # // DEVPROP_TYPE_UINT32
    # PROBLEM_CODE = PropertyKey.from_define(
    #     0x4340A6C5, 0x93FA, 0x4706, 0x97, 0x2C, 0x7B, 0x64, 0x80, 0x08, 0xA5, 0xA7, 3
    # )  # // DEVPROP_TYPE_UINT32
    # EJECTION_RELATIONS = PropertyKey.from_define(
    #     0x4340A6C5, 0x93FA, 0x4706, 0x97, 0x2C, 0x7B, 0x64, 0x80, 0x08, 0xA5, 0xA7, 4
    # )  # // DEVPROP_TYPE_STRING_LIST
    # REMOVAL_RELATIONS = PropertyKey.from_define(
    #     0x4340A6C5, 0x93FA, 0x4706, 0x97, 0x2C, 0x7B, 0x64, 0x80, 0x08, 0xA5, 0xA7, 5
    # )  # // DEVPROP_TYPE_STRING_LIST
    # POWER_RELATIONS = PropertyKey.from_define(
    #     0x4340A6C5, 0x93FA, 0x4706, 0x97, 0x2C, 0x7B, 0x64, 0x80, 0x08, 0xA5, 0xA7, 6
    # )  # // DEVPROP_TYPE_STRING_LIST
    # BUS_RELATIONS = PropertyKey.from_define(
    #     0x4340A6C5, 0x93FA, 0x4706, 0x97, 0x2C, 0x7B, 0x64, 0x80, 0x08, 0xA5, 0xA7, 7
    # )  # // DEVPROP_TYPE_STRING_LIST
    # PARENT = PropertyKey.from_define(
    #     0x4340A6C5, 0x93FA, 0x4706, 0x97, 0x2C, 0x7B, 0x64, 0x80, 0x08, 0xA5, 0xA7, 8
    # )  # // DEVPROP_TYPE_STRING
    # CHILDREN = PropertyKey.from_define(
    #     0x4340A6C5, 0x93FA, 0x4706, 0x97, 0x2C, 0x7B, 0x64, 0x80, 0x08, 0xA5, 0xA7, 9
    # )  # // DEVPROP_TYPE_STRING_LIST
    # SIBLINGS = PropertyKey.from_define(
    #     0x4340A6C5, 0x93FA, 0x4706, 0x97, 0x2C, 0x7B, 0x64, 0x80, 0x08, 0xA5, 0xA7, 10
    # )  # // DEVPROP_TYPE_STRING_LIST
    # TRANSPORT_RELATIONS = PropertyKey.from_define(
    #     0x4340A6C5, 0x93FA, 0x4706, 0x97, 0x2C, 0x7B, 0x64, 0x80, 0x08, 0xA5, 0xA7, 11
    # )  # // DEVPROP_TYPE_STRING_LIST
    # PROBLEM_STATUS = PropertyKey.from_define(
    #     0x4340A6C5, 0x93FA, 0x4706, 0x97, 0x2C, 0x7B, 0x64, 0x80, 0x08, 0xA5, 0xA7, 12
    # )  # // DEVPROP_TYPE_NTSTATUS
    # REPORTED = PropertyKey.from_define(
    #     0x80497100, 0x8C73, 0x48B9, 0xAA, 0xD9, 0xCE, 0x38, 0x7E, 0x19, 0xC5, 0x6E, 2
    # )  # // DEVPROP_TYPE_BOOLEAN
    # LEGACY = PropertyKey.from_define(
    #     0x80497100, 0x8C73, 0x48B9, 0xAA, 0xD9, 0xCE, 0x38, 0x7E, 0x19, 0xC5, 0x6E, 3
    # )  # // DEVPROP_TYPE_BOOLEAN
    # CONTAINER_ID = PropertyKey.from_define(
    #     0x8C7ED206, 0x3F8A, 0x4827, 0xB3, 0xAB, 0xAE, 0x9E, 0x1F, 0xAE, 0xFC, 0x6C, 2
    # )  # // DEVPROP_TYPE_GUID
    # IN_LOCAL_MACHINE_CONTAINER = PropertyKey.from_define(
    #     0x8C7ED206, 0x3F8A, 0x4827, 0xB3, 0xAB, 0xAE, 0x9E, 0x1F, 0xAE, 0xFC, 0x6C, 4
    # )  # // DEVPROP_TYPE_BOOLEAN
    # MODEL = PropertyKey.from_define(
    #     0x78C34FC8, 0x104A, 0x4ACA, 0x9E, 0xA4, 0x52, 0x4D, 0x52, 0x99, 0x6E, 0x57, 39
    # )  # // DEVPROP_TYPE_STRING
    # MODEL_ID = PropertyKey.from_define(
    #     0x80D81EA6, 0x7473, 0x4B0C, 0x82, 0x16, 0xEF, 0xC1, 0x1A, 0x2C, 0x4C, 0x8B, 2
    # )  # // DEVPROP_TYPE_GUID
    # FRIENDLY_NAME_ATTRIBUTES = PropertyKey.from_define(
    #     0x80D81EA6, 0x7473, 0x4B0C, 0x82, 0x16, 0xEF, 0xC1, 0x1A, 0x2C, 0x4C, 0x8B, 3
    # )  # // DEVPROP_TYPE_UINT32
    # MANUFACTURER_ATTRIBUTES = PropertyKey.from_define(
    #     0x80D81EA6, 0x7473, 0x4B0C, 0x82, 0x16, 0xEF, 0xC1, 0x1A, 0x2C, 0x4C, 0x8B, 4
    # )  # // DEVPROP_TYPE_UINT32
    # PRESENCE_NOT_FOR_DEVICE = PropertyKey.from_define(
    #     0x80D81EA6, 0x7473, 0x4B0C, 0x82, 0x16, 0xEF, 0xC1, 0x1A, 0x2C, 0x4C, 0x8B, 5
    # )  # // DEVPROP_TYPE_BOOLEAN
    # SIGNAL_STRENGTH = PropertyKey.from_define(
    #     0x80D81EA6, 0x7473, 0x4B0C, 0x82, 0x16, 0xEF, 0xC1, 0x1A, 0x2C, 0x4C, 0x8B, 6
    # )  # // DEVPROP_TYPE_INT32
    # IS_ASSOCIATEABLE_BY_USER_ACTION = PropertyKey.from_define(
    #     0x80D81EA6, 0x7473, 0x4B0C, 0x82, 0x16, 0xEF, 0xC1, 0x1A, 0x2C, 0x4C, 0x8B, 7
    # )  # // DEVPROP_TYPE_BOOLEAN
    # SHOW_IN_UNINSTALL_UI = PropertyKey.from_define(
    #     0x80D81EA6, 0x7473, 0x4B0C, 0x82, 0x16, 0xEF, 0xC1, 0x1A, 0x2C, 0x4C, 0x8B, 8
    # )  # // DEVPROP_TYPE_BOOLEAN
    # COMPANION_APPS = PropertyKey.from_define(
    #     0x6A742654, 0xD0B2, 0x4420, 0xA5, 0x23, 0xE0, 0x68, 0x35, 0x2A, 0xC1, 0xDF, 2
    # )  # // DEVPROP_TYPE_STRING_LIST
    # PRIMARY_COMPANION_APP = PropertyKey.from_define(
    #     0x6A742654, 0xD0B2, 0x4420, 0xA5, 0x23, 0xE0, 0x68, 0x35, 0x2A, 0xC1, 0xDF, 3
    # )  # // DEVPROP_TYPE_STRING
    # NUMA_PROXIMITY_DOMAIN = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 1
    # )  # // DEVPROP_TYPE_UINT32
    # DHP_REBALANCE_POLICY = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 2
    # )  # // DEVPROP_TYPE_UINT32
    # NUMA_NODE = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 3
    # )  # // DEVPROP_TYPE_UINT32
    # BUS_REPORTED_DEVICE_DESC = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 4
    # )  # // DEVPROP_TYPE_STRING
    # IS_PRESENT = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 5
    # )  # // DEVPROP_TYPE_BOOL
    # HAS_PROBLEM = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 6
    # )  # // DEVPROP_TYPE_BOOL
    # CONFIGURATION_ID = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 7
    # )  # // DEVPROP_TYPE_STRING
    # REPORTED_DEVICE_IDS_HASH = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 8
    # )  # // DEVPROP_TYPE_UINT32
    # PHYSICAL_DEVICE_LOCATION = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 9
    # )  # // DEVPROP_TYPE_BINARY
    # BIOS_DEVICE_NAME = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 10
    # )  # // DEVPROP_TYPE_STRING
    # DRIVER_PROBLEM_DESC = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 11
    # )  # // DEVPROP_TYPE_STRING
    # DEBUGGER_SAFE = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 12
    # )  # // DEVPROP_TYPE_UINT32
    # POST_INSTALL_IN_PROGRESS = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 13
    # )  # // DEVPROP_TYPE_BOOLEAN
    # STACK = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 14
    # )  # // DEVPROP_TYPE_STRING_LIST
    # EXTENDED_CONFIGURATION_IDS = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 15
    # )  # // DEVPROP_TYPE_STRING_LIST
    # IS_REBOOT_REQUIRED = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 16
    # )  # // DEVPROP_TYPE_BOOLEAN
    # FIRMWARE_DATE = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 17
    # )  # // DEVPROP_TYPE_FILETIME
    # FIRMWARE_VERSION = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 18
    # )  # // DEVPROP_TYPE_STRING
    # FIRMWARE_REVISION = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 19
    # )  # // DEVPROP_TYPE_STRING
    # DEPENDENCY_PROVIDERS = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 20
    # )  # // DEVPROP_TYPE_STRING_LIST
    # DEPENDENCY_DEPENDENTS = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 21
    # )  # // DEVPROP_TYPE_STRING_LIST
    # SOFT_RESTART_SUPPORTED = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 22
    # )  # // DEVPROP_TYPE_BOOLEAN
    # EXTENDED_ADDRESS = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 23
    # )  # // DEVPROP_TYPE_UINT64
    # ASSIGNED_TO_GUEST = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 24
    # )  # // DEVPROP_TYPE_BOOLEAN
    # CREATOR_PROCESS_ID = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 25
    # )  # // DEVPROP_TYPE_UINT32
    # FIRMWARE_VENDOR = PropertyKey.from_define(
    #     0x540B947E, 0x8B40, 0x45BC, 0xA8, 0xA2, 0x6A, 0x0B, 0x89, 0x4C, 0xBD, 0xA2, 26
    # )  # // DEVPROP_TYPE_STRING
    # SESSION_ID = PropertyKey.from_define(
    #     0x83DA6326, 0x97A6, 0x4088, 0x94, 0x53, 0xA1, 0x92, 0x3F, 0x57, 0x3B, 0x29, 6
    # )  # // DEVPROP_TYPE_UINT32
    # INSTALL_DATE = PropertyKey.from_define(
    #     0x83DA6326, 0x97A6, 0x4088, 0x94, 0x53, 0xA1, 0x92, 0x3F, 0x57, 0x3B, 0x29, 100
    # )  # // DEVPROP_TYPE_FILETIME
    # FIRST_INSTALL_DATE = PropertyKey.from_define(
    #     0x83DA6326, 0x97A6, 0x4088, 0x94, 0x53, 0xA1, 0x92, 0x3F, 0x57, 0x3B, 0x29, 101
    # )  # // DEVPROP_TYPE_FILETIME
    # LAST_ARRIVAL_DATE = PropertyKey.from_define(
    #     0x83DA6326, 0x97A6, 0x4088, 0x94, 0x53, 0xA1, 0x92, 0x3F, 0x57, 0x3B, 0x29, 102
    # )  # // DEVPROP_TYPE_FILETIME
    # LAST_REMOVAL_DATE = PropertyKey.from_define(
    #     0x83DA6326, 0x97A6, 0x4088, 0x94, 0x53, 0xA1, 0x92, 0x3F, 0x57, 0x3B, 0x29, 103
    # )  # // DEVPROP_TYPE_FILETIME
    # DRIVER_DATE = PropertyKey.from_define(
    #     0xA8B865DD, 0x2E3D, 0x4094, 0xAD, 0x97, 0xE5, 0x93, 0xA7, 0xC, 0x75, 0xD6, 2
    # )  # // DEVPROP_TYPE_FILETIME
    # DRIVER_VERSION = PropertyKey.from_define(
    #     0xA8B865DD, 0x2E3D, 0x4094, 0xAD, 0x97, 0xE5, 0x93, 0xA7, 0xC, 0x75, 0xD6, 3
    # )  # // DEVPROP_TYPE_STRING
    # DRIVER_DESC = PropertyKey.from_define(
    #     0xA8B865DD, 0x2E3D, 0x4094, 0xAD, 0x97, 0xE5, 0x93, 0xA7, 0xC, 0x75, 0xD6, 4
    # )  # // DEVPROP_TYPE_STRING
    # DRIVER_INF_PATH = PropertyKey.from_define(
    #     0xA8B865DD, 0x2E3D, 0x4094, 0xAD, 0x97, 0xE5, 0x93, 0xA7, 0xC, 0x75, 0xD6, 5
    # )  # // DEVPROP_TYPE_STRING
    # DRIVER_INF_SECTION = PropertyKey.from_define(
    #     0xA8B865DD, 0x2E3D, 0x4094, 0xAD, 0x97, 0xE5, 0x93, 0xA7, 0xC, 0x75, 0xD6, 6
    # )  # // DEVPROP_TYPE_STRING
    # DRIVER_INF_SECTION_EXT = PropertyKey.from_define(
    #     0xA8B865DD, 0x2E3D, 0x4094, 0xAD, 0x97, 0xE5, 0x93, 0xA7, 0xC, 0x75, 0xD6, 7
    # )  # // DEVPROP_TYPE_STRING
    # MATCHING_DEVICE_ID = PropertyKey.from_define(
    #     0xA8B865DD, 0x2E3D, 0x4094, 0xAD, 0x97, 0xE5, 0x93, 0xA7, 0xC, 0x75, 0xD6, 8
    # )  # // DEVPROP_TYPE_STRING
    # DRIVER_PROVIDER = PropertyKey.from_define(
    #     0xA8B865DD, 0x2E3D, 0x4094, 0xAD, 0x97, 0xE5, 0x93, 0xA7, 0xC, 0x75, 0xD6, 9
    # )  # // DEVPROP_TYPE_STRING
    # DRIVER_PROP_PAGE_PROVIDER = PropertyKey.from_define(
    #     0xA8B865DD, 0x2E3D, 0x4094, 0xAD, 0x97, 0xE5, 0x93, 0xA7, 0xC, 0x75, 0xD6, 10
    # )  # // DEVPROP_TYPE_STRING
    # DRIVER_CO_INSTALLERS = PropertyKey.from_define(
    #     0xA8B865DD, 0x2E3D, 0x4094, 0xAD, 0x97, 0xE5, 0x93, 0xA7, 0xC, 0x75, 0xD6, 11
    # )  # // DEVPROP_TYPE_STRING_LIST
    # RESOURCE_PICKER_TAGS = PropertyKey.from_define(
    #     0xA8B865DD, 0x2E3D, 0x4094, 0xAD, 0x97, 0xE5, 0x93, 0xA7, 0xC, 0x75, 0xD6, 12
    # )  # // DEVPROP_TYPE_STRING
    # RESOURCE_PICKER_EXCEPTIONS = PropertyKey.from_define(
    #     0xA8B865DD, 0x2E3D, 0x4094, 0xAD, 0x97, 0xE5, 0x93, 0xA7, 0xC, 0x75, 0xD6, 13
    # )  # // DEVPROP_TYPE_STRING
    # DRIVER_RANK = PropertyKey.from_define(
    #     0xA8B865DD, 0x2E3D, 0x4094, 0xAD, 0x97, 0xE5, 0x93, 0xA7, 0xC, 0x75, 0xD6, 14
    # )  # // DEVPROP_TYPE_UINT32
    # DRIVER_LOGO_LEVEL = PropertyKey.from_define(
    #     0xA8B865DD, 0x2E3D, 0x4094, 0xAD, 0x97, 0xE5, 0x93, 0xA7, 0xC, 0x75, 0xD6, 15
    # )  # // DEVPROP_TYPE_UINT32
    # NO_CONNECT_SOUND = PropertyKey.from_define(
    #     0xA8B865DD, 0x2E3D, 0x4094, 0xAD, 0x97, 0xE5, 0x93, 0xA7, 0xC, 0x75, 0xD6, 17
    # )  # // DEVPROP_TYPE_BOOLEAN
    # GENERIC_DRIVER_INSTALLED = PropertyKey.from_define(
    #     0xA8B865DD, 0x2E3D, 0x4094, 0xAD, 0x97, 0xE5, 0x93, 0xA7, 0xC, 0x75, 0xD6, 18
    # )  # // DEVPROP_TYPE_BOOLEAN
    # ADDITIONAL_SOFTWARE_REQUESTED = PropertyKey.from_define(
    #     0xA8B865DD, 0x2E3D, 0x4094, 0xAD, 0x97, 0xE5, 0x93, 0xA7, 0xC, 0x75, 0xD6, 19
    # )  # // DEVPROP_TYPE_BOOLEAN
    # SAFE_REMOVAL_REQUIRED = PropertyKey.from_define(
    #     0xAFD97640, 0x86A3, 0x4210, 0xB6, 0x7C, 0x28, 0x9C, 0x41, 0xAA, 0xBE, 0x55, 2
    # )  # // DEVPROP_TYPE_BOOLEAN
    # SAFE_REMOVAL_REQUIRED_OVERRIDE = PropertyKey.from_define(
    #     0xAFD97640, 0x86A3, 0x4210, 0xB6, 0x7C, 0x28, 0x9C, 0x41, 0xAA, 0xBE, 0x55, 3
    # )  # // DEVPROP_TYPE_BOOLEAN
